name = "remix-workers-bookmark"

workers_dev = true
main = "./build/index.js"
# https://developers.cloudflare.com/workers/platform/compatibility-dates
compatibility_date = "2023-04-20"
# account_id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

[site]
  bucket = "./public"

[build]
  command = "npm run build"

[[kv_namespaces]]
binding = "SESSION_KV"
id = "68e2859f25ef45edbec271cf9747ffa9"
preview_id = "db41a3ffbf4c4700baf4fad2593110df"

[[d1_databases]]
binding = "DB"
database_name = "SAMPLE_DB"
database_id = "9f710257-8899-4c12-af15-974b9f731142"
migrations_dir = "db/migrate"

[[queues.producers]]
binding = "QUEUE"
queue = "bookmark-queue"

[[queues.consumers]]
queue = "bookmark-queue"
max_batch_size = 1
max_batch_timeout = 30

[[r2_buckets]]
binding = "BUCKET"
bucket_name = "bookmark-bucket"
preview_bucket_name = "bookmark-bucket-preview"

[[durable_objects.bindings]]
name = "COUNTER"
class_name = "BookmarkCounter"

[[migrations]]
tag = "v1"
new_classes = ["BookmarkCounter"]

[triggers]
  crons = ["0 0 1 1 *"]
[env.dev.triggers]
  crons = ["0 * * * *"]

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Note: Use secrets to store sensitive data.
# Docs: https://developers.cloudflare.com/workers/platform/environment-variables
# [vars]
# MY_VARIABLE = "production_value"

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/kv
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/r2/api/workers/workers-api-usage/
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind a Queue consumer. Queue Consumers can retrieve tasks scheduled by Producers to act on them.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.consumers]]
# queue = "my-queue"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/workers/platform/services
# [[services]]
# binding = "MY_SERVICE"
# service = "/api/*"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# Durable Object migrations.
# Docs: https://developers.cloudflare.com/workers/learning/using-durable-objects#configure-durable-object-classes-with-migrations
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]